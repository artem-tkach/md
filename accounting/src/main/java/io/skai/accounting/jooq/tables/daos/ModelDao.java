/*
 * This file is generated by jOOQ.
 */
package io.skai.accounting.jooq.tables.daos;


import io.skai.accounting.jooq.tables.Model;
import io.skai.accounting.jooq.tables.records.ModelRecord;

import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ModelDao extends DAOImpl<ModelRecord, io.skai.accounting.jooq.tables.pojos.Model, Long> {

    /**
     * Create a new ModelDao without any configuration
     */
    public ModelDao() {
        super(Model.MODEL, io.skai.accounting.jooq.tables.pojos.Model.class);
    }

    /**
     * Create a new ModelDao with an attached configuration
     */
    public ModelDao(Configuration configuration) {
        super(Model.MODEL, io.skai.accounting.jooq.tables.pojos.Model.class, configuration);
    }

    @Override
    public Long getId(io.skai.accounting.jooq.tables.pojos.Model object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.skai.accounting.jooq.tables.pojos.Model> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Model.MODEL.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<io.skai.accounting.jooq.tables.pojos.Model> fetchById(Long... values) {
        return fetch(Model.MODEL.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public io.skai.accounting.jooq.tables.pojos.Model fetchOneById(Long value) {
        return fetchOne(Model.MODEL.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<io.skai.accounting.jooq.tables.pojos.Model> fetchOptionalById(Long value) {
        return fetchOptional(Model.MODEL.ID, value);
    }

    /**
     * Fetch records that have <code>brand_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.skai.accounting.jooq.tables.pojos.Model> fetchRangeOfBrandId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Model.MODEL.BRAND_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>brand_id IN (values)</code>
     */
    public List<io.skai.accounting.jooq.tables.pojos.Model> fetchByBrandId(Long... values) {
        return fetch(Model.MODEL.BRAND_ID, values);
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.skai.accounting.jooq.tables.pojos.Model> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Model.MODEL.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<io.skai.accounting.jooq.tables.pojos.Model> fetchByName(String... values) {
        return fetch(Model.MODEL.NAME, values);
    }
}
