/*
 * This file is generated by jOOQ.
 */
package io.skai.accounting.jooq.tables.daos;


import io.skai.accounting.jooq.tables.Delivery;
import io.skai.accounting.jooq.tables.records.DeliveryRecord;

import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DeliveryDao extends DAOImpl<DeliveryRecord, io.skai.accounting.jooq.tables.pojos.Delivery, Long> {

    /**
     * Create a new DeliveryDao without any configuration
     */
    public DeliveryDao() {
        super(Delivery.DELIVERY, io.skai.accounting.jooq.tables.pojos.Delivery.class);
    }

    /**
     * Create a new DeliveryDao with an attached configuration
     */
    public DeliveryDao(Configuration configuration) {
        super(Delivery.DELIVERY, io.skai.accounting.jooq.tables.pojos.Delivery.class, configuration);
    }

    @Override
    public Long getId(io.skai.accounting.jooq.tables.pojos.Delivery object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.skai.accounting.jooq.tables.pojos.Delivery> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Delivery.DELIVERY.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<io.skai.accounting.jooq.tables.pojos.Delivery> fetchById(Long... values) {
        return fetch(Delivery.DELIVERY.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public io.skai.accounting.jooq.tables.pojos.Delivery fetchOneById(Long value) {
        return fetchOne(Delivery.DELIVERY.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<io.skai.accounting.jooq.tables.pojos.Delivery> fetchOptionalById(Long value) {
        return fetchOptional(Delivery.DELIVERY.ID, value);
    }

    /**
     * Fetch records that have <code>date BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.skai.accounting.jooq.tables.pojos.Delivery> fetchRangeOfDate(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Delivery.DELIVERY.DATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>date IN (values)</code>
     */
    public List<io.skai.accounting.jooq.tables.pojos.Delivery> fetchByDate(LocalDateTime... values) {
        return fetch(Delivery.DELIVERY.DATE, values);
    }

    /**
     * Fetch records that have <code>order_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.skai.accounting.jooq.tables.pojos.Delivery> fetchRangeOfOrderId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Delivery.DELIVERY.ORDER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>order_id IN (values)</code>
     */
    public List<io.skai.accounting.jooq.tables.pojos.Delivery> fetchByOrderId(Long... values) {
        return fetch(Delivery.DELIVERY.ORDER_ID, values);
    }

    /**
     * Fetch records that have <code>manager_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.skai.accounting.jooq.tables.pojos.Delivery> fetchRangeOfManagerId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(Delivery.DELIVERY.MANAGER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>manager_id IN (values)</code>
     */
    public List<io.skai.accounting.jooq.tables.pojos.Delivery> fetchByManagerId(Long... values) {
        return fetch(Delivery.DELIVERY.MANAGER_ID, values);
    }

    /**
     * Fetch records that have <code>sum BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.skai.accounting.jooq.tables.pojos.Delivery> fetchRangeOfSum(Double lowerInclusive, Double upperInclusive) {
        return fetchRange(Delivery.DELIVERY.SUM, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>sum IN (values)</code>
     */
    public List<io.skai.accounting.jooq.tables.pojos.Delivery> fetchBySum(Double... values) {
        return fetch(Delivery.DELIVERY.SUM, values);
    }

    /**
     * Fetch records that have <code>guid BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<io.skai.accounting.jooq.tables.pojos.Delivery> fetchRangeOfGuid(String lowerInclusive, String upperInclusive) {
        return fetchRange(Delivery.DELIVERY.GUID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>guid IN (values)</code>
     */
    public List<io.skai.accounting.jooq.tables.pojos.Delivery> fetchByGuid(String... values) {
        return fetch(Delivery.DELIVERY.GUID, values);
    }

    /**
     * Fetch a unique record that has <code>guid = value</code>
     */
    public io.skai.accounting.jooq.tables.pojos.Delivery fetchOneByGuid(String value) {
        return fetchOne(Delivery.DELIVERY.GUID, value);
    }

    /**
     * Fetch a unique record that has <code>guid = value</code>
     */
    public Optional<io.skai.accounting.jooq.tables.pojos.Delivery> fetchOptionalByGuid(String value) {
        return fetchOptional(Delivery.DELIVERY.GUID, value);
    }
}
