/*
 * This file is generated by jOOQ.
 */
package io.skai.accounting.jooq.tables.records;


import io.skai.accounting.jooq.tables.OrderStatus;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OrderStatusRecord extends UpdatableRecordImpl<OrderStatusRecord> implements Record4<Long, Long, String, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>mobile_accounting.order_status.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>mobile_accounting.order_status.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>mobile_accounting.order_status.order_id</code>.
     */
    public void setOrderId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>mobile_accounting.order_status.order_id</code>.
     */
    public Long getOrderId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>mobile_accounting.order_status.status</code>.
     */
    public void setStatus(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>mobile_accounting.order_status.status</code>.
     */
    public String getStatus() {
        return (String) get(2);
    }

    /**
     * Setter for <code>mobile_accounting.order_status.date</code>.
     */
    public void setDate(LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>mobile_accounting.order_status.date</code>.
     */
    public LocalDateTime getDate() {
        return (LocalDateTime) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, Long, String, LocalDateTime> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Long, Long, String, LocalDateTime> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return OrderStatus.ORDER_STATUS.ID;
    }

    @Override
    public Field<Long> field2() {
        return OrderStatus.ORDER_STATUS.ORDER_ID;
    }

    @Override
    public Field<String> field3() {
        return OrderStatus.ORDER_STATUS.STATUS;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return OrderStatus.ORDER_STATUS.DATE;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Long component2() {
        return getOrderId();
    }

    @Override
    public String component3() {
        return getStatus();
    }

    @Override
    public LocalDateTime component4() {
        return getDate();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Long value2() {
        return getOrderId();
    }

    @Override
    public String value3() {
        return getStatus();
    }

    @Override
    public LocalDateTime value4() {
        return getDate();
    }

    @Override
    public OrderStatusRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public OrderStatusRecord value2(Long value) {
        setOrderId(value);
        return this;
    }

    @Override
    public OrderStatusRecord value3(String value) {
        setStatus(value);
        return this;
    }

    @Override
    public OrderStatusRecord value4(LocalDateTime value) {
        setDate(value);
        return this;
    }

    @Override
    public OrderStatusRecord values(Long value1, Long value2, String value3, LocalDateTime value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached OrderStatusRecord
     */
    public OrderStatusRecord() {
        super(OrderStatus.ORDER_STATUS);
    }

    /**
     * Create a detached, initialised OrderStatusRecord
     */
    public OrderStatusRecord(Long id, Long orderId, String status, LocalDateTime date) {
        super(OrderStatus.ORDER_STATUS);

        setId(id);
        setOrderId(orderId);
        setStatus(status);
        setDate(date);
    }

    /**
     * Create a detached, initialised OrderStatusRecord
     */
    public OrderStatusRecord(io.skai.accounting.jooq.tables.pojos.OrderStatus value) {
        super(OrderStatus.ORDER_STATUS);

        if (value != null) {
            setId(value.getId());
            setOrderId(value.getOrderId());
            setStatus(value.getStatus());
            setDate(value.getDate());
        }
    }
}
