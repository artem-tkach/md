/*
 * This file is generated by jOOQ.
 */
package io.skai.accounting.jooq.tables.records;


import io.skai.accounting.jooq.tables.Repair;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RepairRecord extends UpdatableRecordImpl<RepairRecord> implements Record7<Long, LocalDateTime, Long, Long, String, Double, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>mobile_accounting.repair.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>mobile_accounting.repair.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>mobile_accounting.repair.date</code>.
     */
    public void setDate(LocalDateTime value) {
        set(1, value);
    }

    /**
     * Getter for <code>mobile_accounting.repair.date</code>.
     */
    public LocalDateTime getDate() {
        return (LocalDateTime) get(1);
    }

    /**
     * Setter for <code>mobile_accounting.repair.order_id</code>.
     */
    public void setOrderId(Long value) {
        set(2, value);
    }

    /**
     * Getter for <code>mobile_accounting.repair.order_id</code>.
     */
    public Long getOrderId() {
        return (Long) get(2);
    }

    /**
     * Setter for <code>mobile_accounting.repair.master_id</code>.
     */
    public void setMasterId(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>mobile_accounting.repair.master_id</code>.
     */
    public Long getMasterId() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>mobile_accounting.repair.result</code>.
     */
    public void setResult(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>mobile_accounting.repair.result</code>.
     */
    public String getResult() {
        return (String) get(4);
    }

    /**
     * Setter for <code>mobile_accounting.repair.sum</code>.
     */
    public void setSum(Double value) {
        set(5, value);
    }

    /**
     * Getter for <code>mobile_accounting.repair.sum</code>.
     */
    public Double getSum() {
        return (Double) get(5);
    }

    /**
     * Setter for <code>mobile_accounting.repair.comment</code>.
     */
    public void setComment(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>mobile_accounting.repair.comment</code>.
     */
    public String getComment() {
        return (String) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Long, LocalDateTime, Long, Long, String, Double, String> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Long, LocalDateTime, Long, Long, String, Double, String> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Repair.REPAIR.ID;
    }

    @Override
    public Field<LocalDateTime> field2() {
        return Repair.REPAIR.DATE;
    }

    @Override
    public Field<Long> field3() {
        return Repair.REPAIR.ORDER_ID;
    }

    @Override
    public Field<Long> field4() {
        return Repair.REPAIR.MASTER_ID;
    }

    @Override
    public Field<String> field5() {
        return Repair.REPAIR.RESULT;
    }

    @Override
    public Field<Double> field6() {
        return Repair.REPAIR.SUM;
    }

    @Override
    public Field<String> field7() {
        return Repair.REPAIR.COMMENT;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public LocalDateTime component2() {
        return getDate();
    }

    @Override
    public Long component3() {
        return getOrderId();
    }

    @Override
    public Long component4() {
        return getMasterId();
    }

    @Override
    public String component5() {
        return getResult();
    }

    @Override
    public Double component6() {
        return getSum();
    }

    @Override
    public String component7() {
        return getComment();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public LocalDateTime value2() {
        return getDate();
    }

    @Override
    public Long value3() {
        return getOrderId();
    }

    @Override
    public Long value4() {
        return getMasterId();
    }

    @Override
    public String value5() {
        return getResult();
    }

    @Override
    public Double value6() {
        return getSum();
    }

    @Override
    public String value7() {
        return getComment();
    }

    @Override
    public RepairRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public RepairRecord value2(LocalDateTime value) {
        setDate(value);
        return this;
    }

    @Override
    public RepairRecord value3(Long value) {
        setOrderId(value);
        return this;
    }

    @Override
    public RepairRecord value4(Long value) {
        setMasterId(value);
        return this;
    }

    @Override
    public RepairRecord value5(String value) {
        setResult(value);
        return this;
    }

    @Override
    public RepairRecord value6(Double value) {
        setSum(value);
        return this;
    }

    @Override
    public RepairRecord value7(String value) {
        setComment(value);
        return this;
    }

    @Override
    public RepairRecord values(Long value1, LocalDateTime value2, Long value3, Long value4, String value5, Double value6, String value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RepairRecord
     */
    public RepairRecord() {
        super(Repair.REPAIR);
    }

    /**
     * Create a detached, initialised RepairRecord
     */
    public RepairRecord(Long id, LocalDateTime date, Long orderId, Long masterId, String result, Double sum, String comment) {
        super(Repair.REPAIR);

        setId(id);
        setDate(date);
        setOrderId(orderId);
        setMasterId(masterId);
        setResult(result);
        setSum(sum);
        setComment(comment);
    }

    /**
     * Create a detached, initialised RepairRecord
     */
    public RepairRecord(io.skai.accounting.jooq.tables.pojos.Repair value) {
        super(Repair.REPAIR);

        if (value != null) {
            setId(value.getId());
            setDate(value.getDate());
            setOrderId(value.getOrderId());
            setMasterId(value.getMasterId());
            setResult(value.getResult());
            setSum(value.getSum());
            setComment(value.getComment());
        }
    }
}
